- Class: meta
  Course: Coding for Cancer swirl
  Lesson: 5.2_Manipulating_Vectors_Challenge_Problems
  Author: Hanako Osuga
  Type: Standard
  Organization: Fred Hutch Cancer Center
  Version: 2.4.5
  
- Class: txt
  Output: "welcome to 5.2 Manipulaitng Vectors Challenge Problems"
  
- Class: txt
  Output: "this is meant to act as additional practice with manipulating more complicated vectors"
  

- Class: txt
  Output: "we're going to import a more complicated data set, copy the next three lines of code and run it (don't worry about understanding this for now)"
  
- Class: cmd_question
  Output: "copy this and run it: TG = ToothGrowth"
  CorrectAnswer: TG = ToothGrowth
  AnswerTests: omnitest(correctExpr="TG = ToothGrowth")
  
- Class: cmd_question 
  Output: 'copy and run: low_dose=TG[which(TG$supp=="OJ"&TG$dose==1),"len"]'
  CorrectAnswer: low_dose = TG[which(TG$supp == "OJ" & TG$dose == 1), "len"]
  AnswerTests: omnitest(correctExpr= 'low_dose = TG[which(TG$supp == "OJ" & TG$dose == 1), "len"]')
  
- Class: cmd_question
  Output: 'copy and run: high_dose=TG[which(TG$supp=="OJ"&TG$dose==2),"len"]'
  CorrectAnswer: high_dose = TG[which(TG$supp == "OJ" & TG$dose == 2), "len"]
  AnswerTests: omnitest(correctExpr=' high_dose = TG[which(TG$supp == "OJ" & TG$dose == 2), "len"]')
  
- Class: txt
  Output: "remember you don't need to understand the syntax of the code you just ran, just know it imported a bigger dataset"
  
- Class: txt
  Output: "look in your Environment pane to see this dataset"
  
- Class: txt
  Output: "the data you just imported is from the paper Effect of vitamin C on odontoblast growth in guinea pig teeth"
  
- Class: txt
  Output: "Scientists treated guinea pigs with low or high dose vitamin C (via orange juice) for a set period of time and then measured the odontoblast (cells responsible for repairing/maintaing the dentin in your tooth) length (in picometeres)"

- Class: txt
  Output: "Source: Crampton, E. W. (1947). The growth of the odontoblast of the incisor teeth as a criterion of vitamin C intake of the guinea pig. The Journal of Nutrition, 33(5), 491â€“504. doi: 10.1093/jn/33.5.491."

- Class: txt
  Output: "this is the same dataset as 4.2 Vector Challenge Problems"
  
- Class: cmd_question
  Output: "what is the third animal in the low dose group?"
  CorrectAnswer: low_dose[3]
  AnswerTests: omnitest(correctExpr= "low_dose[3]", correctVal=23.6)
  Hint: "what can we use to access values stored in vectors?"

- Class: cmd_question
  Output: "what is the last animal in the high dose group? do this in 1 line of code"
  CorrectAnswer: high_dose[length(high_dose)]
  AnswerTests: omnitest(correctExpr="high_dose[length(high_dose)]", correctVal=23)
  Hint: "use the length() function to find the length of high dose"
  
- Class: txt
  Output: "after collecting the data, you found out that the two animals above had health issues and should be removed from the data"
  
- Class: cmd_question
  Output: "save low_dose to a new name fixed_low"
  CorrectAnswer: fixed_low <- low_dose
  AnswerTests: omnitest(correctExpr="fixed_low <- low_dose")
  
- Class: cmd_question
  Output: "now set the value for the third animal to NA"
  CorrectAnswer: fixed_low[3] <- NA
  AnswerTests: omnitest( correctExpr = "fixed_low[3] <- NA")
  Hint: 're-assign the third value in fixed_low as NA'

- Class: cmd_question
  Output: "now lets save high_dose to a new name fixed_high"
  CorrectAnswer: fixed_high <- high_dose
  AnswerTests: omnitest(correctExpr="fixed_high <- high_dose")

- Class: cmd_question
  Output: "now set the value for the last animal to NA"
  CorrectAnswer: fixed_high[length(fixed_high)] <- NA
  AnswerTests: omnitest(correctExpr = "fixed_high[length(fixed_high)] <- NA")
  Hint: "re-assign the last value in fixed_high as NA"
  
- Class: txt
  Output: "moving forward we are going to use the new vectors you made (with some animals removed)"

- Class: txt
  Output: "this will give us practice with removing missing data"
  
- Class: cmd_question
  Output: "what is the new median of tooth length in fixed_low?"
  CorrectAnswer: median(fixed_low, na.rm = TRUE)
  AnswerTests: omnitest(correctExpr = 'median(fixed_low, na.rm = TRUE)', correctVal= 23.3)
  Hint: 'what is the argument you can use to remove NAs?'

- Class: cmd_question
  Output: "what is the new median of tooth length in fixed_high?"
  CorrectAnswer: median(fixed_high, na.rm = TRUE)
  AnswerTests: omnitest(correctExpr = "median(fixed_high, na.rm = TRUE)", correctVal=26.4)
  Hint: "what is the argument you can use to remove NAs?"

- Class: txt
  Output: "lets say the normal range for odontoblasts is 22 +// 2 picometers"

- Class: txt
  Output: "odontoblasts are what this study measured to measure tooth growth"

- Class: cmd_question
  Output: "remove NAs from fixed_low, and assign it to fixed_low_noNA"
  CorrectAnswer: fixed_low_noNA <- fixed_low[!(is.na(fixed_low))]
  AnswerTests: omnitest(correctExpr = "fixed_low_noNA <- fixed_low[!(is.na(fixed_low))]")
  Hint: "use the is.na() function and the opposite operator !"

- Class: cmd_question
  Output: "do the same to fixed_high, and assign it to fixed_high_noNA"
  CorrectAnswer: fixed_high_noNA <- fixed_high[!(is.na(fixed_high))]
  AnswerTests: omnitest(correctExpr = "fixed_high_noNA <- fixed_high[!(is.na(fixed_high))]")
  Hint: "use the is.na() function and the opposite operator !"
  
- Class: cmd_question
  Output: "how many values in fixed_low_noNA are greater than this typical range (i.e. greater than 24)?"
  CorrectAnswer: length(fixed_low_noNA[fixed_low_noNA > 24])
  AnswerTests: omnitest(correctExpr = "length(fixed_low_noNA[fixed_low_noNA > 24])", correctVal =4)
  Hint: "how can we access vector values that fit a condition?"

- Class: cmd_question
  Output: "how many values in fixed_high_noNA are greater than this typical range (i.e. greater than 24)?"
  CorrectAnswer: length(fixed_high_noNA[fixed_high_noNA > 24])
  AnswerTests: omnitest(correctExpr = "length(fixed_high_noNA[fixed_high_noNA > 24])", correctVal = 8)
  Hint: "how can we access vector values that fit a condition?"
  
- Class: cmd_question
  Output: "how many values are greater or equal to 20 and less than or equal to 24 picometers in the fixed low dose group?"
  CorrectAnswer: length(fixed_low_noNA[fixed_low_noNA <= 24 & fixed_low_noNA >= 20])
  AnswerTests: omnitest(correctExpr="length(fixed_low_noNA[fixed_low_noNA <= 24 & fixed_low_noNA >= 20])", correctVal = 3)
  Hint: "combine two expressionsn together (e.g. x[x>9 & x<= 14])"

- Class: cmd_question 
  Output: "how many values are greater or equal to 20 and less than or equal to 24 picometers in the fixed high dose group?"
  CorrectAnswer: length(fixed_high_noNA[fixed_high_noNA <= 24 & fixed_high_noNA >= 20])
  AnswerTests: omnitest(correctExpr = "length(fixed_high_noNA[fixed_high_noNA <= 24 & fixed_high_noNA >= 20])", correctVal = 1)
  Hint: "combine two expressionsn together (e.g. x[x>9 & x<= 14])"

- Class: mult_question
  Output: "does a higher dose of orange juice seem to lead to longer osteoblasts in guinea pigs?"
  AnswerChoices: yes; no; not sure
  CorrectAnswer: yes
  AnswerTests: omnitest(correctVal = 'yes')
  
- Class: txt
  Output: "great work with these complicated vector manipulations!"
  


